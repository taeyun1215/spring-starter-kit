plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

configurations {
    asciidoctorExt
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // MariaDb
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Prometheus
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // Rest Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // Selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.5.0'

    // If needed, you can add web driver binaries manager to simplify the setup
    implementation 'io.github.bonigarcia:webdrivermanager:5.2.1'

}

ext {
    snippetsDir = file('build/generated-snippets') // 생성된 snippets을 저장할 경로
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir // 생성된 snippets을 지정된 경로 저장
}

asciidoctor {
    dependsOn test // test 이후 asciidoctor가 실행되도록 설정

    inputs.dir snippetsDir
    doFirst {
        delete file('src/main/resources/static/docs') // 기존에 있던 문서 삭제
    }
}

bootJar {
    dependsOn asciidoctor // asciidoctor 이후 bootJar가 실행되도록 설정

    copy {
        from "${asciidoctor.outputDir}"
        into "src/main/resources/static/docs"   // src/main/resources/static/docs로 복사
    }
}