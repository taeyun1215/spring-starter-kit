plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'

    id 'com.epages.restdocs-api-spec' version '0.17.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

ext {
    snippetsDir = file('build/generated-snippets') // 스니펫 디렉토리 설정
    apiDocsDir = file('build/api-spec') // OpenAPI 스펙 파일 저장 경로
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // MariaDb
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Prometheus
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // Rest Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // SpringDoc OpenAPI (Swagger) 통합
    implementation 'org.springdoc:springdoc-openapi-ui:2.2.0'
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:2.2.0'

    // REST Docs와 OpenAPI 스펙 생성을 위한 의존성 추가
    testImplementation 'com.epages:restdocs-api-spec:0.17.2'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.17.2'
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir // 생성된 snippets을 지정된 경로 저장
}

tasks.register('restDocsTest', Test) {
    outputs.dir snippetsDir
    useJUnitPlatform {
        includeTags 'restDocs' // 필요한 경우 태그 설정
    }

    finalizedBy 'asciidoctor', 'openapi3' // 테스트 후 asciidoctor와 openapi3 태스크 실행
}

asciidoctor {
    dependsOn restDocsTest // restDocsTest 이후 asciidoctor 실행

    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    baseDirFollowsSourceDir() // 원본 파일 기준으로 작업
}

openapi3 {
    servers = [
            [url: 'http://localhost:8080']
    ]
    title = 'spring-starter-kit'
    description = 'spring-starter-kit document swagger ui.'
    version = "${project.version}"
    format = 'yaml'
    outputDir = apiDocsDir  // 출력 디렉토리 설정
}

tasks.register('copyOpenApiSpec', Copy) {
    dependsOn 'openapi3'

    from(apiDocsDir)
    into 'src/main/resources/static/swagger' // Swagger UI에서 참조할 수 있도록 스펙 파일 복사
}

bootJar {
    dependsOn 'asciidoctor', 'copyOpenApiSpec' // asciidoctor와 스펙 복사 이후 실행

    from("${asciidoctor.outputDir}") {
        into 'BOOT-INF/classes/static/docs'
    }
    from(apiDocsDir) {
        into 'BOOT-INF/classes/static/swagger' // Swagger 파일 포함
    }
}

springBoot {
    buildInfo()
}