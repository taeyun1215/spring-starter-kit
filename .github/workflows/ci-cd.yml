name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: your-dockerhub-username/spring-starter-kit

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew clean bootJar --no-daemon

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Deploy to Development Server
        if: github.ref == 'refs/heads/dev'
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USER }}
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          port: ${{ secrets.DEV_SERVER_SSH_PORT }}
          envs:
            DEV_SPRING_IMAGE: $IMAGE_NAME:${{ github.ref_name }}
          script: |
            cd /path/to/your/docker-compose/files
            export DEV_SPRING_IMAGE=${DEV_SPRING_IMAGE}
            docker-compose -f docker-compose.yml -f docker-compose.dev.yml pull
            docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d

      - name: Deploy to Production Server
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.PROD_SERVER_SSH_KEY }}
          port: ${{ secrets.PROD_SERVER_SSH_PORT }}
          envs:
            PROD_SPRING_IMAGE: $IMAGE_NAME:${{ github.ref_name }}
            DB_USERNAME: ${{ secrets.DB_USERNAME }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            REDIS_HOST: ${{ secrets.REDIS_HOST }}
            REDIS_PORT: ${{ secrets.REDIS_PORT }}
          script: |
            cd /path/to/your/docker-compose/files
            export PROD_SPRING_IMAGE=${PROD_SPRING_IMAGE}
            export DB_USERNAME=${DB_USERNAME}
            export DB_PASSWORD=${DB_PASSWORD}
            export REDIS_HOST=${REDIS_HOST}
            export REDIS_PORT=${REDIS_PORT}
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
